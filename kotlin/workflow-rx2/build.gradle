/*
 * Copyright 2019 Square Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'com.vanniktech.maven.publish'
apply plugin: 'org.jetbrains.dokka'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dokka rootProject.ext.defaultDokkaConfig

dependencies {
  compileOnly deps.annotations.intellij

  api project(':workflow-core')
  api deps.kotlin.stdLib.jdk6
  api deps.kotlin.coroutines.core
  api deps.rxjava2.rxjava2

  implementation deps.kotlin.coroutines.rx2
  implementation deps.kotlin.reflect

  testImplementation project(':workflow-testing')
  testImplementation deps.kotlin.test.jdk
  testImplementation deps.test.truth
  compile 'com.nordstrom.tools:junit-foundation:11.0.0'
}

ext {
  junitFoundation = configurations.compile.resolvedConfiguration.resolvedArtifacts.find { it.name == 'junit-foundation' }
}

test.doFirst {
  jvmArgs "-javaagent:${junitFoundation.file}"
}

test {
  //  debug true
  // not required, but definitely useful
  testLogging.showStandardStreams = true
}
